/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} k
 * @return {ListNode}
 */
var rotateRight = function(head, k) {
    
if (head===null||head.next===null||k===0){
    return head
}


    let length=1
    let oldtail=head
    while(oldtail.next!==null){
        oldtail=oldtail.next    
        length++
    }
k=k%length


if(k===0){
    return head
}

let newtail=head

for (let i=0;i<length-k-1;i++){
    newtail=newtail.next
}

const newhead=newtail.next

oldtail.next=head
newtail.next=null

return newhead 

};